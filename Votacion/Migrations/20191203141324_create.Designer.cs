// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Votacion.Context;

namespace Votacion.Migrations
{
    [DbContext(typeof(DalContext))]
    [Migration("20191203141324_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SistemaElecciones.Models.Candidato", b =>
                {
                    b.Property<int>("CandidatoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidoID")
                        .HasColumnType("int");

                    b.Property<int>("TipoVotoID")
                        .HasColumnType("int");

                    b.HasKey("CandidatoID");

                    b.HasIndex("PartidoID");

                    b.HasIndex("TipoVotoID");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("SistemaElecciones.Models.Jurado", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesaID")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("MesaID");

                    b.ToTable("Jurados");
                });

            modelBuilder.Entity("SistemaElecciones.Models.Mesa", b =>
                {
                    b.Property<int>("MesaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoQR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<bool>("estadoMesa")
                        .HasColumnType("bit");

                    b.HasKey("MesaID");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("SistemaElecciones.Models.Partido", b =>
                {
                    b.Property<int>("PartidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartidoID");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("SistemaElecciones.Models.TipoVoto", b =>
                {
                    b.Property<int>("TipoVotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoVotoID");

                    b.ToTable("TipoVoto");
                });

            modelBuilder.Entity("SistemaElecciones.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesaID")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("MesaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaElecciones.Models.Voto", b =>
                {
                    b.Property<int>("VotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidatoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("VotoID");

                    b.HasIndex("CandidatoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Votos");
                });

            modelBuilder.Entity("SistemaElecciones.Models.Candidato", b =>
                {
                    b.HasOne("SistemaElecciones.Models.Partido", "Partido")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaElecciones.Models.TipoVoto", "TipoVoto")
                        .WithMany()
                        .HasForeignKey("TipoVotoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaElecciones.Models.Jurado", b =>
                {
                    b.HasOne("SistemaElecciones.Models.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaElecciones.Models.Usuario", b =>
                {
                    b.HasOne("SistemaElecciones.Models.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaElecciones.Models.Voto", b =>
                {
                    b.HasOne("SistemaElecciones.Models.Candidato", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaElecciones.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
